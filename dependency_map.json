{
  "timestamp": "2025-06-18T15:02:35.240852",
  "project_root": "D:\\GUST\\Rebuiltmodular\\Gust_botW",
  "python_dependencies": {
    "files": {
      "app.py": {
        "imports": [
          "import os",
          "import json",
          "import time",
          "import threading",
          "import schedule",
          "import secrets",
          "from datetime import datetime, timedelta",
          "from collections import deque",
          "from flask import Flask, render_template, session, redirect, url_for, jsonify, request",
          "import logging",
          "from config import Config, WEBSOCKETS_AVAILABLE, MONGODB_AVAILABLE, ensure_directories, ensure_data_files",
          "from utils.rate_limiter import RateLimiter",
          "from utils.helpers import load_token, format_command, validate_server_id, validate_region",
          "from systems.koth import VanillaKothSystem",
          "from routes.auth import auth_bp",
          "from routes.servers import init_servers_routes",
          "from routes.events import init_events_routes",
          "from routes.economy import init_economy_routes",
          "from routes.gambling import init_gambling_routes",
          "from routes.clans import init_clans_routes",
          "from routes.users import init_users_routes",
          "from routes.user_database import init_user_database_routes",
          "from routes.logs import init_logs_routes",
          "from websocket.manager import WebSocketManager",
          "from pymongo import MongoClient",
          "from utils.user_helpers import UserStorage",
          "from routes.auth import require_auth"
        ],
        "functions": [
          "debug_user_storage",
          "__init__",
          "register",
          "register_user",
          "get",
          "__getitem__",
          "__setitem__",
          "__contains__",
          "keys",
          "values",
          "items",
          "get_user_profile",
          "update_user_profile",
          "ensure_user_on_server",
          "get_server_balance",
          "set_server_balance",
          "adjust_server_balance",
          "get_users_on_server",
          "get_server_leaderboard",
          "__init__",
          "init_database",
          "setup_routes",
          "run",
          "start_background_tasks",
          "cleanup_expired_events",
          "index",
          "health_check",
          "get_console_output",
          "send_console_command",
          "connect_live_console",
          "disconnect_live_console",
          "get_live_console_status",
          "get_live_console_messages",
          "test_live_console",
          "get_clans",
          "run_scheduled",
          "register_compatibility"
        ],
        "classes": [
          "InMemoryUserStorage",
          "GustBotEnhanced"
        ],
        "routes": [],
        "exports": [
          "debug_user_storage",
          "__init__",
          "register",
          "register_user",
          "get",
          "__getitem__",
          "__setitem__",
          "__contains__",
          "keys",
          "values",
          "items",
          "get_user_profile",
          "update_user_profile",
          "ensure_user_on_server",
          "get_server_balance",
          "set_server_balance",
          "adjust_server_balance",
          "get_users_on_server",
          "get_server_leaderboard",
          "__init__",
          "init_database",
          "setup_routes",
          "run",
          "start_background_tasks",
          "cleanup_expired_events",
          "index",
          "health_check",
          "get_console_output",
          "send_console_command",
          "connect_live_console",
          "disconnect_live_console",
          "get_live_console_status",
          "get_live_console_messages",
          "test_live_console",
          "get_clans",
          "run_scheduled",
          "register_compatibility",
          "InMemoryUserStorage",
          "GustBotEnhanced"
        ],
        "file_size": 30076,
        "dependencies": [
          "import os",
          "import json",
          "import time",
          "import threading",
          "import schedule",
          "import secrets",
          "from datetime import datetime, timedelta",
          "from collections import deque",
          "from flask import Flask, render_template, session, redirect, url_for, jsonify, request",
          "import logging",
          "from config import Config, WEBSOCKETS_AVAILABLE, MONGODB_AVAILABLE, ensure_directories, ensure_data_files",
          "from utils.rate_limiter import RateLimiter",
          "from utils.helpers import load_token, format_command, validate_server_id, validate_region",
          "from systems.koth import VanillaKothSystem",
          "from routes.auth import auth_bp",
          "from routes.servers import init_servers_routes",
          "from routes.events import init_events_routes",
          "from routes.economy import init_economy_routes",
          "from routes.gambling import init_gambling_routes",
          "from routes.clans import init_clans_routes",
          "from routes.users import init_users_routes",
          "from routes.user_database import init_user_database_routes",
          "from routes.logs import init_logs_routes",
          "from websocket.manager import WebSocketManager",
          "from pymongo import MongoClient",
          "from utils.user_helpers import UserStorage",
          "from routes.auth import require_auth"
        ],
        "internal_imports": [
          "from utils.rate_limiter import RateLimiter",
          "from utils.helpers import load_token, format_command, validate_server_id, validate_region",
          "from systems.koth import VanillaKothSystem",
          "from routes.auth import auth_bp",
          "from routes.servers import init_servers_routes",
          "from routes.events import init_events_routes",
          "from routes.economy import init_economy_routes",
          "from routes.gambling import init_gambling_routes",
          "from routes.clans import init_clans_routes",
          "from routes.users import init_users_routes",
          "from routes.user_database import init_user_database_routes",
          "from routes.logs import init_logs_routes",
          "from websocket.manager import WebSocketManager",
          "from utils.user_helpers import UserStorage",
          "from routes.auth import require_auth"
        ]
      },
      "comprehensive_test.py": {
        "imports": [
          "import os",
          "import sys",
          "import json",
          "import time",
          "import importlib.util",
          "import requests",
          "import threading",
          "from pathlib import Path",
          "from datetime import datetime",
          "from typing import Dict, List, Any, Optional",
          "import subprocess",
          "import argparse"
        ],
        "functions": [
          "main",
          "__init__",
          "log",
          "test_file_structure",
          "test_python_imports",
          "start_test_server",
          "test_routes",
          "analyze_architecture",
          "test_frontend_components",
          "stop_test_server",
          "generate_summary",
          "run_comprehensive_test",
          "print_results",
          "check_directory"
        ],
        "classes": [
          "GustProjectValidator"
        ],
        "routes": [],
        "exports": [
          "main",
          "__init__",
          "log",
          "test_file_structure",
          "test_python_imports",
          "start_test_server",
          "test_routes",
          "analyze_architecture",
          "test_frontend_components",
          "stop_test_server",
          "generate_summary",
          "run_comprehensive_test",
          "print_results",
          "check_directory",
          "GustProjectValidator"
        ],
        "file_size": 31155,
        "dependencies": [
          "import os",
          "import sys",
          "import json",
          "import time",
          "import importlib.util",
          "import requests",
          "import threading",
          "from pathlib import Path",
          "from datetime import datetime",
          "from typing import Dict, List, Any, Optional",
          "import subprocess",
          "import argparse"
        ],
        "internal_imports": []
      },
      "config.py": {
        "imports": [
          "import os",
          "import json",
          "import secrets",
          "import websockets",
          "from pymongo import MongoClient",
          "import time"
        ],
        "functions": [
          "check_dependencies",
          "ensure_directories",
          "ensure_data_files",
          "print_startup_info"
        ],
        "classes": [
          "Config"
        ],
        "routes": [],
        "exports": [
          "check_dependencies",
          "ensure_directories",
          "ensure_data_files",
          "print_startup_info",
          "Config"
        ],
        "file_size": 7613,
        "dependencies": [
          "import os",
          "import json",
          "import secrets",
          "import websockets",
          "from pymongo import MongoClient",
          "import time"
        ],
        "internal_imports": []
      },
      "dependency_mapper.py": {
        "imports": [
          "import os",
          "import re",
          "import json",
          "import ast",
          "import time",
          "from pathlib import Path",
          "from datetime import datetime",
          "from typing import Dict, List, Set, Any, Tuple",
          "from collections import defaultdict",
          "import argparse"
        ],
        "functions": [
          "main",
          "__init__",
          "log",
          "analyze_python_imports",
          "extract_python_imports",
          "extract_python_definitions",
          "extract_flask_routes",
          "analyze_template_dependencies",
          "analyze_javascript_dependencies",
          "analyze_js_content",
          "extract_js_from_html",
          "map_api_endpoints",
          "trace_data_flow_chains",
          "trace_auth_flow",
          "trace_economy_flow",
          "trace_server_flow",
          "trace_console_flow",
          "generate_architecture_layers",
          "run_complete_analysis",
          "generate_summary",
          "calculate_complexity_distribution",
          "export_markdown_report",
          "generate_markdown_content"
        ],
        "classes": [
          "DependencyMapper"
        ],
        "routes": [],
        "exports": [
          "main",
          "__init__",
          "log",
          "analyze_python_imports",
          "extract_python_imports",
          "extract_python_definitions",
          "extract_flask_routes",
          "analyze_template_dependencies",
          "analyze_javascript_dependencies",
          "analyze_js_content",
          "extract_js_from_html",
          "map_api_endpoints",
          "trace_data_flow_chains",
          "trace_auth_flow",
          "trace_economy_flow",
          "trace_server_flow",
          "trace_console_flow",
          "generate_architecture_layers",
          "run_complete_analysis",
          "generate_summary",
          "calculate_complexity_distribution",
          "export_markdown_report",
          "generate_markdown_content",
          "DependencyMapper"
        ],
        "file_size": 28515,
        "dependencies": [
          "import os",
          "import re",
          "import json",
          "import ast",
          "import time",
          "from pathlib import Path",
          "from datetime import datetime",
          "from typing import Dict, List, Set, Any, Tuple",
          "from collections import defaultdict",
          "import argparse"
        ],
        "internal_imports": []
      },
      "main.py": {
        "imports": [
          "import os",
          "import sys",
          "from app import GustBotEnhanced",
          "from config import check_dependencies, print_startup_info"
        ],
        "functions": [
          "main"
        ],
        "classes": [],
        "routes": [],
        "exports": [
          "main"
        ],
        "file_size": 1608,
        "dependencies": [
          "import os",
          "import sys",
          "from app import GustBotEnhanced",
          "from config import check_dependencies, print_startup_info"
        ],
        "internal_imports": []
      },
      "quick_test.py": {
        "imports": [
          "import os",
          "import json",
          "import time",
          "from pathlib import Path",
          "from datetime import datetime",
          "from typing import Dict, List, Any"
        ],
        "functions": [
          "main",
          "__init__",
          "log",
          "test_file_structure",
          "analyze_project_architecture",
          "check_dependencies",
          "generate_summary",
          "run_quick_validation",
          "print_results"
        ],
        "classes": [
          "QuickProjectValidator"
        ],
        "routes": [],
        "exports": [
          "main",
          "__init__",
          "log",
          "test_file_structure",
          "analyze_project_architecture",
          "check_dependencies",
          "generate_summary",
          "run_quick_validation",
          "print_results",
          "QuickProjectValidator"
        ],
        "file_size": 18905,
        "dependencies": [
          "import os",
          "import json",
          "import time",
          "from pathlib import Path",
          "from datetime import datetime",
          "from typing import Dict, List, Any"
        ],
        "internal_imports": []
      },
      "routes\\auth.py": {
        "imports": [
          "import requests",
          "from flask import Blueprint, request, jsonify, session, redirect, url_for, render_template",
          "from datetime import datetime",
          "from config import Config",
          "from utils.helpers import save_token",
          "import logging",
          "import os",
          "import json",
          "import time",
          "from utils.helpers import refresh_token",
          "from functools import wraps",
          "from functools import wraps"
        ],
        "functions": [
          "login",
          "logout",
          "token_status",
          "refresh_token_endpoint",
          "authenticate_gportal",
          "require_auth",
          "require_live_mode",
          "get_user_info",
          "decorated_function",
          "decorated_function"
        ],
        "classes": [],
        "routes": [
          {
            "path": "/login",
            "methods": [
              "GET",
              "POST"
            ]
          },
          {
            "path": "/logout",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/token/status",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/token/refresh",
            "methods": [
              "POST"
            ]
          }
        ],
        "exports": [
          "login",
          "logout",
          "token_status",
          "refresh_token_endpoint",
          "authenticate_gportal",
          "require_auth",
          "require_live_mode",
          "get_user_info",
          "decorated_function",
          "decorated_function"
        ],
        "file_size": 8451,
        "dependencies": [
          "import requests",
          "from flask import Blueprint, request, jsonify, session, redirect, url_for, render_template",
          "from datetime import datetime",
          "from config import Config",
          "from utils.helpers import save_token",
          "import logging",
          "import os",
          "import json",
          "import time",
          "from utils.helpers import refresh_token",
          "from functools import wraps",
          "from functools import wraps"
        ],
        "internal_imports": [
          "from utils.helpers import save_token",
          "from utils.helpers import refresh_token"
        ]
      },
      "routes\\clans.py": {
        "imports": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "import uuid",
          "import logging",
          "from routes.auth import require_auth",
          "from utils.user_helpers import (",
          "import secrets"
        ],
        "functions": [
          "init_clans_routes",
          "ensure_user_on_server",
          "set_user_clan_tag",
          "get_user_info",
          "update_clan_stats",
          "generate_internal_id",
          "get_server_clans",
          "create_clan",
          "join_clan",
          "leave_clan",
          "get_clan_stats",
          "get_user_clan_info"
        ],
        "classes": [],
        "routes": [
          {
            "path": "/api/clans/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/clans/create",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/clans/join",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/clans/leave",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/clans/stats/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/clans/user/<user_id>/<server_id>",
            "methods": [
              "GET"
            ]
          }
        ],
        "exports": [
          "init_clans_routes",
          "ensure_user_on_server",
          "set_user_clan_tag",
          "get_user_info",
          "update_clan_stats",
          "generate_internal_id",
          "get_server_clans",
          "create_clan",
          "join_clan",
          "leave_clan",
          "get_clan_stats",
          "get_user_clan_info"
        ],
        "file_size": 20393,
        "dependencies": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "import uuid",
          "import logging",
          "from routes.auth import require_auth",
          "from utils.user_helpers import (",
          "import secrets"
        ],
        "internal_imports": [
          "from routes.auth import require_auth",
          "from utils.user_helpers import ("
        ]
      },
      "routes\\client.py": {
        "imports": [
          "import json",
          "import time",
          "import asyncio",
          "import logging",
          "from datetime import datetime",
          "from collections import deque",
          "from config import Config, WEBSOCKETS_AVAILABLE",
          "from utils.helpers import classify_message",
          "import websockets",
          "import websockets"
        ],
        "functions": [
          "__init__",
          "_is_connection_open",
          "get_recent_messages",
          "get_connection_info"
        ],
        "classes": [
          "GPortalWebSocketClient"
        ],
        "routes": [],
        "exports": [
          "__init__",
          "_is_connection_open",
          "get_recent_messages",
          "get_connection_info",
          "GPortalWebSocketClient"
        ],
        "file_size": 14181,
        "dependencies": [
          "import json",
          "import time",
          "import asyncio",
          "import logging",
          "from datetime import datetime",
          "from collections import deque",
          "from config import Config, WEBSOCKETS_AVAILABLE",
          "from utils.helpers import classify_message",
          "import websockets",
          "import websockets"
        ],
        "internal_imports": [
          "from utils.helpers import classify_message"
        ]
      },
      "routes\\economy.py": {
        "imports": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "import uuid",
          "from routes.auth import require_auth",
          "from utils.user_helpers import (",
          "import logging"
        ],
        "functions": [
          "init_economy_routes",
          "log_transaction",
          "get_user_transactions",
          "get_user_balance_server",
          "set_user_balance_server",
          "adjust_user_balance_server",
          "transfer_coins_server",
          "get_economy_leaderboard_server",
          "get_user_transactions_server",
          "get_server_economy_stats",
          "get_user_balance_legacy",
          "transfer_coins_legacy"
        ],
        "classes": [],
        "routes": [
          {
            "path": "/api/economy/balance/<user_id>/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/economy/set-balance/<user_id>/<server_id>",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/economy/adjust-balance/<user_id>/<server_id>",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/economy/transfer/<server_id>",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/economy/leaderboard/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/economy/transactions/<user_id>/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/economy/server-stats/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/economy/balance/<user_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/economy/transfer",
            "methods": [
              "POST"
            ]
          }
        ],
        "exports": [
          "init_economy_routes",
          "log_transaction",
          "get_user_transactions",
          "get_user_balance_server",
          "set_user_balance_server",
          "adjust_user_balance_server",
          "transfer_coins_server",
          "get_economy_leaderboard_server",
          "get_user_transactions_server",
          "get_server_economy_stats",
          "get_user_balance_legacy",
          "transfer_coins_legacy"
        ],
        "file_size": 15109,
        "dependencies": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "import uuid",
          "from routes.auth import require_auth",
          "from utils.user_helpers import (",
          "import logging"
        ],
        "internal_imports": [
          "from routes.auth import require_auth",
          "from utils.user_helpers import ("
        ]
      },
      "routes\\events.py": {
        "imports": [
          "from flask import Blueprint, request, jsonify, session",
          "from datetime import datetime",
          "from routes.auth import require_auth",
          "import logging",
          "from config import Config"
        ],
        "functions": [
          "init_events_routes",
          "start_koth_event",
          "stop_koth_event",
          "get_events",
          "get_event",
          "get_events_for_server",
          "get_event_stats",
          "get_arena_locations",
          "get_event_templates"
        ],
        "classes": [],
        "routes": [
          {
            "path": "/api/events/koth/start",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/events/koth/stop",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/events",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/events/<event_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/events/server/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/events/stats",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/events/arena-locations",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/events/templates",
            "methods": [
              "GET"
            ]
          }
        ],
        "exports": [
          "init_events_routes",
          "start_koth_event",
          "stop_koth_event",
          "get_events",
          "get_event",
          "get_events_for_server",
          "get_event_stats",
          "get_arena_locations",
          "get_event_templates"
        ],
        "file_size": 11838,
        "dependencies": [
          "from flask import Blueprint, request, jsonify, session",
          "from datetime import datetime",
          "from routes.auth import require_auth",
          "import logging",
          "from config import Config"
        ],
        "internal_imports": [
          "from routes.auth import require_auth"
        ]
      },
      "routes\\gambling.py": {
        "imports": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "import uuid",
          "import secrets",
          "import random",
          "from routes.auth import require_auth",
          "from utils.user_helpers import (",
          "import logging"
        ],
        "functions": [
          "init_gambling_routes",
          "calculate_slot_winnings",
          "update_gambling_stats",
          "log_gambling_game",
          "get_user_gambling_history",
          "get_user_gambling_stats",
          "get_server_gambling_leaderboard",
          "play_slots_server",
          "play_coinflip_server",
          "play_dice_server",
          "get_gambling_history_server",
          "get_gambling_stats_server",
          "get_gambling_leaderboard_server",
          "play_slots_legacy",
          "play_coinflip_legacy",
          "play_dice_legacy"
        ],
        "classes": [],
        "routes": [
          {
            "path": "/api/gambling/slots/<user_id>/<server_id>",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/gambling/coinflip/<user_id>/<server_id>",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/gambling/dice/<user_id>/<server_id>",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/gambling/history/<user_id>/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/gambling/stats/<user_id>/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/gambling/leaderboard/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/gambling/slots",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/gambling/coinflip",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/gambling/dice",
            "methods": [
              "POST"
            ]
          }
        ],
        "exports": [
          "init_gambling_routes",
          "calculate_slot_winnings",
          "update_gambling_stats",
          "log_gambling_game",
          "get_user_gambling_history",
          "get_user_gambling_stats",
          "get_server_gambling_leaderboard",
          "play_slots_server",
          "play_coinflip_server",
          "play_dice_server",
          "get_gambling_history_server",
          "get_gambling_stats_server",
          "get_gambling_leaderboard_server",
          "play_slots_legacy",
          "play_coinflip_legacy",
          "play_dice_legacy"
        ],
        "file_size": 22001,
        "dependencies": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "import uuid",
          "import secrets",
          "import random",
          "from routes.auth import require_auth",
          "from utils.user_helpers import (",
          "import logging"
        ],
        "internal_imports": [
          "from routes.auth import require_auth",
          "from utils.user_helpers import ("
        ]
      },
      "routes\\koth.py": {
        "imports": [
          "import time",
          "import threading",
          "import uuid",
          "from datetime import datetime",
          "from config import Config",
          "from utils.helpers import get_countdown_announcements",
          "import logging"
        ],
        "functions": [
          "__init__",
          "start_koth_event_fixed",
          "_run_koth_event_sequence",
          "_announcement_phase",
          "_active_phase",
          "_end_phase",
          "_emergency_end_event",
          "_cleanup_event",
          "_send_command",
          "get_active_events",
          "stop_event",
          "get_event_status",
          "get_events_for_server",
          "get_statistics"
        ],
        "classes": [
          "VanillaKothSystem"
        ],
        "routes": [],
        "exports": [
          "__init__",
          "start_koth_event_fixed",
          "_run_koth_event_sequence",
          "_announcement_phase",
          "_active_phase",
          "_end_phase",
          "_emergency_end_event",
          "_cleanup_event",
          "_send_command",
          "get_active_events",
          "stop_event",
          "get_event_status",
          "get_events_for_server",
          "get_statistics",
          "VanillaKothSystem"
        ],
        "file_size": 12799,
        "dependencies": [
          "import time",
          "import threading",
          "import uuid",
          "from datetime import datetime",
          "from config import Config",
          "from utils.helpers import get_countdown_announcements",
          "import logging"
        ],
        "internal_imports": [
          "from utils.helpers import get_countdown_announcements"
        ]
      },
      "routes\\logs.py": {
        "imports": [
          "import requests",
          "import json",
          "import time",
          "from datetime import datetime",
          "from flask import Blueprint, request, jsonify, send_file",
          "from routes.auth import require_auth",
          "import logging",
          "import os",
          "from utils.helpers import load_token, refresh_token"
        ],
        "functions": [
          "init_logs_routes",
          "__init__",
          "get_server_logs",
          "format_log_entries",
          "get_servers",
          "get_logs",
          "download_logs",
          "download_log_file",
          "refresh_logs",
          "load_token",
          "refresh_token"
        ],
        "classes": [
          "GPortalLogAPI"
        ],
        "routes": [
          {
            "path": "/api/logs/servers",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/logs",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/logs/download",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/logs/<log_id>/download",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/logs/refresh",
            "methods": [
              "POST"
            ]
          }
        ],
        "exports": [
          "init_logs_routes",
          "__init__",
          "get_server_logs",
          "format_log_entries",
          "get_servers",
          "get_logs",
          "download_logs",
          "download_log_file",
          "refresh_logs",
          "load_token",
          "refresh_token",
          "GPortalLogAPI"
        ],
        "file_size": 12604,
        "dependencies": [
          "import requests",
          "import json",
          "import time",
          "from datetime import datetime",
          "from flask import Blueprint, request, jsonify, send_file",
          "from routes.auth import require_auth",
          "import logging",
          "import os",
          "from utils.helpers import load_token, refresh_token"
        ],
        "internal_imports": [
          "from routes.auth import require_auth",
          "from utils.helpers import load_token, refresh_token"
        ]
      },
      "routes\\manager.py": {
        "imports": [
          "import asyncio",
          "import threading",
          "import logging",
          "from datetime import datetime",
          "from config import WEBSOCKETS_AVAILABLE",
          "from .client import GPortalWebSocketClient"
        ],
        "functions": [
          "__init__",
          "start",
          "_run_loop",
          "add_connection",
          "remove_connection",
          "get_connection_status",
          "get_messages",
          "get_connection",
          "is_connected",
          "get_stats",
          "disconnect_all",
          "stop"
        ],
        "classes": [
          "WebSocketManager"
        ],
        "routes": [],
        "exports": [
          "__init__",
          "start",
          "_run_loop",
          "add_connection",
          "remove_connection",
          "get_connection_status",
          "get_messages",
          "get_connection",
          "is_connected",
          "get_stats",
          "disconnect_all",
          "stop",
          "WebSocketManager"
        ],
        "file_size": 10229,
        "dependencies": [
          "import asyncio",
          "import threading",
          "import logging",
          "from datetime import datetime",
          "from config import WEBSOCKETS_AVAILABLE",
          "from .client import GPortalWebSocketClient"
        ],
        "internal_imports": []
      },
      "routes\\servers.py": {
        "imports": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "from routes.auth import require_auth",
          "from utils.helpers import create_server_data, validate_server_id, validate_region",
          "import logging",
          "from flask import current_app"
        ],
        "functions": [
          "init_servers_routes",
          "get_servers",
          "add_server",
          "update_server",
          "delete_server",
          "ping_server",
          "bulk_server_action",
          "get_server",
          "get_server_stats"
        ],
        "classes": [],
        "routes": [
          {
            "path": "/api/servers",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/servers/add",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/servers/update/<server_id>",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/servers/delete/<server_id>",
            "methods": [
              "DELETE"
            ]
          },
          {
            "path": "/api/servers/ping/<server_id>",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/servers/bulk-action",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/servers/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/servers/stats",
            "methods": [
              "GET"
            ]
          }
        ],
        "exports": [
          "init_servers_routes",
          "get_servers",
          "add_server",
          "update_server",
          "delete_server",
          "ping_server",
          "bulk_server_action",
          "get_server",
          "get_server_stats"
        ],
        "file_size": 13841,
        "dependencies": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "from routes.auth import require_auth",
          "from utils.helpers import create_server_data, validate_server_id, validate_region",
          "import logging",
          "from flask import current_app"
        ],
        "internal_imports": [
          "from routes.auth import require_auth",
          "from utils.helpers import create_server_data, validate_server_id, validate_region"
        ]
      },
      "routes\\users.py": {
        "imports": [
          "from flask import Blueprint, request, jsonify, session",
          "from datetime import datetime, timedelta",
          "import uuid",
          "from routes.auth import require_auth",
          "import logging"
        ],
        "functions": [
          "init_users_routes",
          "temp_ban_user",
          "permanent_ban_user",
          "unban_user",
          "give_item",
          "kick_user",
          "teleport_user",
          "get_bans",
          "get_user_history",
          "search_users",
          "get_user_stats"
        ],
        "classes": [],
        "routes": [
          {
            "path": "/api/bans/temp",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/bans/permanent",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/bans/unban",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/items/give",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/users/kick",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/users/teleport",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/bans",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/users/<user_id>/history",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/users/search",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/users/stats",
            "methods": [
              "GET"
            ]
          }
        ],
        "exports": [
          "init_users_routes",
          "temp_ban_user",
          "permanent_ban_user",
          "unban_user",
          "give_item",
          "kick_user",
          "teleport_user",
          "get_bans",
          "get_user_history",
          "search_users",
          "get_user_stats"
        ],
        "file_size": 19693,
        "dependencies": [
          "from flask import Blueprint, request, jsonify, session",
          "from datetime import datetime, timedelta",
          "import uuid",
          "from routes.auth import require_auth",
          "import logging"
        ],
        "internal_imports": [
          "from routes.auth import require_auth"
        ]
      },
      "routes\\user_database.py": {
        "imports": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "import secrets",
          "import random",
          "from routes.auth import require_auth",
          "import logging"
        ],
        "functions": [
          "init_user_database_routes",
          "get_user_profile",
          "update_user_last_seen",
          "get_user_display_name",
          "get_server_balance",
          "set_server_balance",
          "adjust_server_balance",
          "register_user",
          "get_user_profile_route",
          "update_user_profile",
          "get_user_servers",
          "join_server",
          "get_server_leaderboard",
          "get_server_user_stats",
          "search_users"
        ],
        "classes": [],
        "routes": [
          {
            "path": "/api/users/register",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/users/profile/<user_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/users/profile/<user_id>",
            "methods": [
              "PUT"
            ]
          },
          {
            "path": "/api/users/servers/<user_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/users/join-server/<user_id>/<server_id>",
            "methods": [
              "POST"
            ]
          },
          {
            "path": "/api/users/leaderboard/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/users/stats/<server_id>",
            "methods": [
              "GET"
            ]
          },
          {
            "path": "/api/users/search",
            "methods": [
              "GET"
            ]
          }
        ],
        "exports": [
          "init_user_database_routes",
          "get_user_profile",
          "update_user_last_seen",
          "get_user_display_name",
          "get_server_balance",
          "set_server_balance",
          "adjust_server_balance",
          "register_user",
          "get_user_profile_route",
          "update_user_profile",
          "get_user_servers",
          "join_server",
          "get_server_leaderboard",
          "get_server_user_stats",
          "search_users"
        ],
        "file_size": 18672,
        "dependencies": [
          "from flask import Blueprint, request, jsonify",
          "from datetime import datetime",
          "import secrets",
          "import random",
          "from routes.auth import require_auth",
          "import logging"
        ],
        "internal_imports": [
          "from routes.auth import require_auth"
        ]
      },
      "routes\\__init__.py": {
        "imports": [
          "from .user_database import init_user_database_routes, user_database_bp",
          "from .economy import init_economy_routes, economy_bp",
          "from .auth import init_auth_routes, auth_bp"
        ],
        "functions": [
          "init_all_routes"
        ],
        "classes": [],
        "routes": [],
        "exports": [
          "init_all_routes"
        ],
        "file_size": 903,
        "dependencies": [
          "from .user_database import init_user_database_routes, user_database_bp",
          "from .economy import init_economy_routes, economy_bp",
          "from .auth import init_auth_routes, auth_bp"
        ],
        "internal_imports": []
      },
      "systems\\koth.py": {
        "imports": [
          "import time",
          "import threading",
          "import uuid",
          "from datetime import datetime",
          "from config import Config",
          "from utils.helpers import get_countdown_announcements",
          "import logging"
        ],
        "functions": [
          "__init__",
          "start_koth_event_fixed",
          "_run_koth_event_sequence",
          "_announcement_phase",
          "_active_phase",
          "_end_phase",
          "_emergency_end_event",
          "_cleanup_event",
          "_send_command",
          "get_active_events",
          "stop_event",
          "get_event_status",
          "get_events_for_server",
          "get_statistics"
        ],
        "classes": [
          "VanillaKothSystem"
        ],
        "routes": [],
        "exports": [
          "__init__",
          "start_koth_event_fixed",
          "_run_koth_event_sequence",
          "_announcement_phase",
          "_active_phase",
          "_end_phase",
          "_emergency_end_event",
          "_cleanup_event",
          "_send_command",
          "get_active_events",
          "stop_event",
          "get_event_status",
          "get_events_for_server",
          "get_statistics",
          "VanillaKothSystem"
        ],
        "file_size": 12799,
        "dependencies": [
          "import time",
          "import threading",
          "import uuid",
          "from datetime import datetime",
          "from config import Config",
          "from utils.helpers import get_countdown_announcements",
          "import logging"
        ],
        "internal_imports": [
          "from utils.helpers import get_countdown_announcements"
        ]
      },
      "systems\\__init__.py": {
        "imports": [
          "import logging",
          "from .koth import VanillaKothSystem"
        ],
        "functions": [
          "get_systems_status",
          "get_available_systems",
          "create_systems_manager",
          "create_koth_system",
          "get_system_registry",
          "register_system",
          "__init__",
          "_initialize_systems",
          "get_system",
          "get_koth_system",
          "get_all_systems",
          "get_system_status",
          "get_all_system_status"
        ],
        "classes": [
          "SystemsManager"
        ],
        "routes": [],
        "exports": [
          "get_systems_status",
          "get_available_systems",
          "create_systems_manager",
          "create_koth_system",
          "get_system_registry",
          "register_system",
          "__init__",
          "_initialize_systems",
          "get_system",
          "get_koth_system",
          "get_all_systems",
          "get_system_status",
          "get_all_system_status",
          "SystemsManager"
        ],
        "file_size": 7312,
        "dependencies": [
          "import logging",
          "from .koth import VanillaKothSystem"
        ],
        "internal_imports": []
      },
      "utils\\helpers.py": {
        "imports": [
          "import json",
          "import time",
          "import os",
          "import logging",
          "from datetime import datetime",
          "from config import Config",
          "import requests"
        ],
        "functions": [
          "load_token",
          "refresh_token",
          "save_token",
          "classify_message",
          "get_type_icon",
          "format_console_message",
          "validate_server_id",
          "validate_region",
          "format_command",
          "create_server_data",
          "get_countdown_announcements",
          "escape_html",
          "safe_int",
          "safe_float",
          "get_status_class",
          "get_status_text"
        ],
        "classes": [],
        "routes": [],
        "exports": [
          "load_token",
          "refresh_token",
          "save_token",
          "classify_message",
          "get_type_icon",
          "format_console_message",
          "validate_server_id",
          "validate_region",
          "format_command",
          "create_server_data",
          "get_countdown_announcements",
          "escape_html",
          "safe_int",
          "safe_float",
          "get_status_class",
          "get_status_text"
        ],
        "file_size": 10907,
        "dependencies": [
          "import json",
          "import time",
          "import os",
          "import logging",
          "from datetime import datetime",
          "from config import Config",
          "import requests"
        ],
        "internal_imports": []
      },
      "utils\\rate_limiter.py": {
        "imports": [
          "import time",
          "from collections import defaultdict"
        ],
        "functions": [
          "__init__",
          "is_allowed",
          "wait_if_needed",
          "get_remaining_calls",
          "get_reset_time",
          "clear_key",
          "clear_all",
          "get_status"
        ],
        "classes": [
          "RateLimiter"
        ],
        "routes": [],
        "exports": [
          "__init__",
          "is_allowed",
          "wait_if_needed",
          "get_remaining_calls",
          "get_reset_time",
          "clear_key",
          "clear_all",
          "get_status",
          "RateLimiter"
        ],
        "file_size": 3707,
        "dependencies": [
          "import time",
          "from collections import defaultdict"
        ],
        "internal_imports": []
      },
      "utils\\user_helpers.py": {
        "imports": [
          "from datetime import datetime",
          "import logging",
          "import random"
        ],
        "functions": [
          "generate_internal_id",
          "get_user_profile",
          "get_server_balance",
          "set_server_balance",
          "adjust_server_balance",
          "ensure_user_on_server",
          "get_users_on_server",
          "get_server_leaderboard",
          "transfer_between_users",
          "get_user_display_name",
          "update_user_last_seen"
        ],
        "classes": [],
        "routes": [],
        "exports": [
          "generate_internal_id",
          "get_user_profile",
          "get_server_balance",
          "set_server_balance",
          "adjust_server_balance",
          "ensure_user_on_server",
          "get_users_on_server",
          "get_server_leaderboard",
          "transfer_between_users",
          "get_user_display_name",
          "update_user_last_seen"
        ],
        "file_size": 8944,
        "dependencies": [
          "from datetime import datetime",
          "import logging",
          "import random"
        ],
        "internal_imports": []
      },
      "utils\\user_migration.py": {
        "imports": [
          "from datetime import datetime",
          "import logging",
          "import random",
          "import json",
          "import os"
        ],
        "functions": [
          "generate_internal_id",
          "__init__",
          "migrate_existing_data",
          "_find_user_clan_tag",
          "_calculate_gambling_stats",
          "validate_migration",
          "create_migration_backup"
        ],
        "classes": [
          "UserDatabaseMigration"
        ],
        "routes": [],
        "exports": [
          "generate_internal_id",
          "__init__",
          "migrate_existing_data",
          "_find_user_clan_tag",
          "_calculate_gambling_stats",
          "validate_migration",
          "create_migration_backup",
          "UserDatabaseMigration"
        ],
        "file_size": 9180,
        "dependencies": [
          "from datetime import datetime",
          "import logging",
          "import random",
          "import json",
          "import os"
        ],
        "internal_imports": []
      },
      "utils\\__init__.py": {
        "imports": [
          "from .rate_limiter import RateLimiter",
          "from .helpers import ("
        ],
        "functions": [],
        "classes": [],
        "routes": [],
        "exports": [],
        "file_size": 974,
        "dependencies": [
          "from .rate_limiter import RateLimiter",
          "from .helpers import ("
        ],
        "internal_imports": []
      },
      "websocket\\client.py": {
        "imports": [
          "import json",
          "import time",
          "import asyncio",
          "import logging",
          "from datetime import datetime",
          "from collections import deque",
          "from config import Config, WEBSOCKETS_AVAILABLE",
          "from utils.helpers import classify_message",
          "import websockets",
          "import websockets"
        ],
        "functions": [
          "__init__",
          "_is_connection_open",
          "get_recent_messages",
          "get_connection_info"
        ],
        "classes": [
          "GPortalWebSocketClient"
        ],
        "routes": [],
        "exports": [
          "__init__",
          "_is_connection_open",
          "get_recent_messages",
          "get_connection_info",
          "GPortalWebSocketClient"
        ],
        "file_size": 14181,
        "dependencies": [
          "import json",
          "import time",
          "import asyncio",
          "import logging",
          "from datetime import datetime",
          "from collections import deque",
          "from config import Config, WEBSOCKETS_AVAILABLE",
          "from utils.helpers import classify_message",
          "import websockets",
          "import websockets"
        ],
        "internal_imports": [
          "from utils.helpers import classify_message"
        ]
      },
      "websocket\\manager.py": {
        "imports": [
          "import asyncio",
          "import threading",
          "import logging",
          "from datetime import datetime",
          "from config import WEBSOCKETS_AVAILABLE",
          "from .client import GPortalWebSocketClient"
        ],
        "functions": [
          "__init__",
          "start",
          "_run_loop",
          "add_connection",
          "remove_connection",
          "get_connection_status",
          "get_messages",
          "get_connection",
          "is_connected",
          "get_stats",
          "disconnect_all",
          "stop"
        ],
        "classes": [
          "WebSocketManager"
        ],
        "routes": [],
        "exports": [
          "__init__",
          "start",
          "_run_loop",
          "add_connection",
          "remove_connection",
          "get_connection_status",
          "get_messages",
          "get_connection",
          "is_connected",
          "get_stats",
          "disconnect_all",
          "stop",
          "WebSocketManager"
        ],
        "file_size": 10229,
        "dependencies": [
          "import asyncio",
          "import threading",
          "import logging",
          "from datetime import datetime",
          "from config import WEBSOCKETS_AVAILABLE",
          "from .client import GPortalWebSocketClient"
        ],
        "internal_imports": []
      },
      "websocket\\__init__.py": {
        "imports": [
          "from config import WEBSOCKETS_AVAILABLE",
          "from .client import GPortalWebSocketClient",
          "from .manager import WebSocketManager"
        ],
        "functions": [
          "get_websocket_status",
          "check_websocket_support",
          "GPortalWebSocketClient",
          "WebSocketManager",
          "GPortalWebSocketClient",
          "WebSocketManager"
        ],
        "classes": [],
        "routes": [],
        "exports": [
          "get_websocket_status",
          "check_websocket_support",
          "GPortalWebSocketClient",
          "WebSocketManager",
          "GPortalWebSocketClient",
          "WebSocketManager"
        ],
        "file_size": 2551,
        "dependencies": [
          "from config import WEBSOCKETS_AVAILABLE",
          "from .client import GPortalWebSocketClient",
          "from .manager import WebSocketManager"
        ],
        "internal_imports": []
      }
    },
    "import_graph": {
      "app.py": 