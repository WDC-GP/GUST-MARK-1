# MongoDB Fallback Fix for app.py
# Add this InMemoryUserStorage class to your app.py file

from datetime import datetime

class InMemoryUserStorage:
    '''Emergency in-memory user storage for demo mode'''
    
    def __init__(self):
        self.users = {}
        print('📝 In-memory user storage initialized')
    
    def register_user(self, user_id, nickname):
        '''Register a new user'''
        if user_id in self.users:
            return {'success': False, 'error': 'User already exists'}
        
        self.users[user_id] = {
            'userId': user_id,
            'nickname': nickname,
            'internalId': len(self.users) + 1000000,
            'registeredAt': datetime.now().isoformat(),
            'servers': {},
            'preferences': {'displayNickname': True},
            'totalServers': 0
        }
        
        return {'success': True, 'user': self.users[user_id]}
    
    def get_user_profile(self, user_id):
        return self.users.get(user_id)
    
    def get_user_server_data(self, user_id, server_id):
        user = self.users.get(user_id)
        if not user:
            return None
        return user.get('servers', {}).get(server_id)
    
    def join_server(self, user_id, server_id):
        if user_id not in self.users:
            return False
        
        if server_id not in self.users[user_id]['servers']:
            self.users[user_id]['servers'][server_id] = {
                'balance': 1000,
                'clanTag': None,
                'joinedAt': datetime.now().isoformat(),
                'gamblingStats': {'totalWagered': 0, 'totalWon': 0, 'gamesPlayed': 0},
                'isActive': True
            }
            self.users[user_id]['totalServers'] += 1
        return True
    
    def set_balance(self, user_id, server_id, balance):
        if user_id not in self.users:
            return False
        if server_id not in self.users[user_id]['servers']:
            self.join_server(user_id, server_id)
        self.users[user_id]['servers'][server_id]['balance'] = balance
        return True
    
    def get_balance(self, user_id, server_id):
        user_data = self.get_user_server_data(user_id, server_id)
        return user_data.get('balance', 0) if user_data else 0

# Instructions for updating your app.py:
# 1. Add the InMemoryUserStorage class above to your app.py
# 2. Update your GustBotEnhanced.__init__ method with proper fallback:

'''
def __init__(self):
    # ... your existing init code ...
    
    # Initialize database with proper fallback
    self.db = None
    self.user_storage = None
    
    try:
        from pymongo import MongoClient
        client = MongoClient('mongodb://localhost:27017/', serverSelectionTimeoutMS=2000)
        client.server_info()
        self.db = client.gust_bot
        print('✅ MongoDB connected successfully')
        
        # Use MongoDB storage
        from utils.user_helpers import UserStorage
        self.user_storage = UserStorage(self.db)
        
    except Exception as e:
        print(f'⚠️ MongoDB connection failed: {e}')
        print('🔄 Falling back to in-memory storage (demo mode)')
        
        # Use in-memory storage
        self.user_storage = InMemoryUserStorage()
    
    # Ensure user_storage is never None
    if self.user_storage is None:
        print('🛠️ Creating emergency in-memory storage')
        self.user_storage = InMemoryUserStorage()
    
    # Continue with rest of initialization...
'''
